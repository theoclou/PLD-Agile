memberSearchIndex = [{"p":"com.pld.agile.controller","c":"Controller","l":"addDeliveryRequest(DeliveryRequest)","u":"addDeliveryRequest(com.pld.agile.model.entity.DeliveryRequest)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"addIntersection(Intersection)","u":"addIntersection(com.pld.agile.model.entity.Intersection)"},{"p":"com.pld.agile","c":"Application","l":"Application()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"arrivalTimes"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"best"},{"p":"com.pld.agile.model.strategy","c":"BnBStrategy","l":"bestCost"},{"p":"com.pld.agile.model.strategy","c":"TspStrategy","l":"bestCost"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"bestPath"},{"p":"com.pld.agile.model.strategy","c":"BnBStrategy","l":"bestPath"},{"p":"com.pld.agile.model.strategy","c":"TspStrategy","l":"bestPath"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"bestSol"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"bestSolCost"},{"p":"com.pld.agile.model.strategy","c":"BnBStrategy","l":"bnb"},{"p":"com.pld.agile.model.strategy","c":"BnBStrategy","l":"BnBStrategy()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"bound(Integer, Collection<Integer>)","u":"bound(java.lang.Integer,java.util.Collection)"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TSP1","l":"bound(Integer, Collection<Integer>)","u":"bound(java.lang.Integer,java.util.Collection)"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"BranchAndBound()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"branchAndBound(int, Collection<Integer>, Collection<Integer>, Double)","u":"branchAndBound(int,java.util.Collection,java.util.Collection,java.lang.Double)"},{"p":"com.pld.agile.model.algorithm.tsp","c":"SeqIter","l":"candidates"},{"p":"com.pld.agile.model.graph","c":"CompleteGraph","l":"CompleteGraph(int, ArrayList<ArrayList<Double>>)","u":"%3Cinit%3E(int,java.util.ArrayList)"},{"p":"com.pld.agile.model","c":"Solver","l":"completeMatrix"},{"p":"com.pld.agile.model.entity","c":"Round","l":"computeRound()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"computeTour(List<Integer>)","u":"computeTour(java.util.List)"},{"p":"com.pld.agile.controller","c":"Controller","l":"computeTours()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"constructTour(List<Integer>)","u":"constructTour(java.util.List)"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"containIntersection(int, int, int, int[])","u":"containIntersection(int,int,int,int[])"},{"p":"com.pld.agile.controller","c":"Controller","l":"Controller()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.graph","c":"CompleteGraph","l":"cost"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"costsMatrix"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"costsMatrix"},{"p":"com.pld.agile.model.entity","c":"DeliveryRequest","l":"courier"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"courier"},{"p":"com.pld.agile.model.entity","c":"Round","l":"COURIER_SPEED"},{"p":"com.pld.agile.model.entity","c":"Courier","l":"Courier(Integer)","u":"%3Cinit%3E(java.lang.Integer)"},{"p":"com.pld.agile.model.entity","c":"Round","l":"courierList"},{"p":"com.pld.agile.model","c":"Solver","l":"createCompleteGraph()"},{"p":"com.pld.agile.controller","c":"Controller","l":"deleteDeliveryRequest(Integer)","u":"deleteDeliveryRequest(java.lang.Integer)"},{"p":"com.pld.agile.model.entity","c":"DeliveryRequest","l":"deliveryAdress"},{"p":"com.pld.agile.model.entity","c":"DeliveryRequest","l":"DeliveryRequest(Intersection)","u":"%3Cinit%3E(com.pld.agile.model.entity.Intersection)"},{"p":"com.pld.agile.model.entity","c":"Round","l":"deliveryRequestList"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"deliveryRequests"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"DeliveryTour(Courier, LocalTime, List<DeliveryRequest>, List<Section>, Map<Intersection, LocalTime>)","u":"%3Cinit%3E(com.pld.agile.model.entity.Courier,java.time.LocalTime,java.util.List,java.util.List,java.util.Map)"},{"p":"com.pld.agile.model.entity","c":"Section","l":"destinationId"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"dijkstraAlgorithm(int, int)","u":"dijkstraAlgorithm(int,int)"},{"p":"com.pld.agile.controller","c":"Controller","l":"displayMap()"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"edgesIntersect(int, int, int, int)","u":"edgesIntersect(int,int,int,int)"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"endTime"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"fillCostsMAtrix()"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"findBestCost()"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"findIndex(int[], int, int)","u":"findIndex(int[],int,int)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"findShortestDistance(int, int)","u":"findShortestDistance(int,int)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"findShortestPath(int, int)","u":"findShortestPath(int,int)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"formatInput(List<String>)","u":"formatInput(java.util.List)"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"g"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"getArrivalTimes()"},{"p":"com.pld.agile.model","c":"Solver","l":"getBestCost()"},{"p":"com.pld.agile.model.strategy","c":"BnBStrategy","l":"getBestCost()"},{"p":"com.pld.agile.model.strategy","c":"SolvingStrategy","l":"getBestCost()"},{"p":"com.pld.agile.model.strategy","c":"TspStrategy","l":"getBestCost()"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"getBestPath()"},{"p":"com.pld.agile.model","c":"Solver","l":"getBestPath()"},{"p":"com.pld.agile.model.strategy","c":"BnBStrategy","l":"getBestPath()"},{"p":"com.pld.agile.model.strategy","c":"SolvingStrategy","l":"getBestPath()"},{"p":"com.pld.agile.model.strategy","c":"TspStrategy","l":"getBestPath()"},{"p":"com.pld.agile.model","c":"Solver","l":"getBestPossibleCost()"},{"p":"com.pld.agile.model","c":"Solver","l":"getBestPossiblePath()"},{"p":"com.pld.agile.model","c":"Solver","l":"getCompleteMatrix()"},{"p":"com.pld.agile.model.graph","c":"CompleteGraph","l":"getCost(int, int)","u":"getCost(int,int)"},{"p":"com.pld.agile.model.graph","c":"Graph","l":"getCost(int, int)","u":"getCost(int,int)"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"getCostsMatrix()"},{"p":"com.pld.agile.model.entity","c":"DeliveryRequest","l":"getCourier()"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"getCourier()"},{"p":"com.pld.agile.model.entity","c":"Round","l":"getCourierList()"},{"p":"com.pld.agile.controller","c":"Controller","l":"getCouriers()"},{"p":"com.pld.agile.model.entity","c":"DeliveryRequest","l":"getDeliveryAdress()"},{"p":"com.pld.agile.model.entity","c":"Round","l":"getDeliveryRequestList()"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"getDeliveryRequests()"},{"p":"com.pld.agile.model.entity","c":"Section","l":"getDestination()"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"getEndTime()"},{"p":"com.pld.agile.model.entity","c":"Courier","l":"getId()"},{"p":"com.pld.agile.model.entity","c":"Intersection","l":"getId()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"getIdByIndex(Integer)","u":"getIdByIndex(java.lang.Integer)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"getIndexById(String)","u":"getIndexById(java.lang.String)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"getIntersectionById(String)","u":"getIntersectionById(java.lang.String)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"getIntersections()"},{"p":"com.pld.agile.model.entity","c":"Intersection","l":"getLatitude()"},{"p":"com.pld.agile.model.entity","c":"Section","l":"getLength()"},{"p":"com.pld.agile.model.entity","c":"Intersection","l":"getLongitude()"},{"p":"com.pld.agile.model.entity","c":"Section","l":"getName()"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"getNbCalls()"},{"p":"com.pld.agile.model.graph","c":"CompleteGraph","l":"getNbVertices()"},{"p":"com.pld.agile.model.graph","c":"Graph","l":"getNbVertices()"},{"p":"com.pld.agile.model.entity","c":"Section","l":"getOrigin()"},{"p":"com.pld.agile.model.entity","c":"Round","l":"getPlan()"},{"p":"com.pld.agile.model","c":"Solver","l":"getPlan()"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"getRoute()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"getSections()"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"getSolution(int)"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TSP","l":"getSolution(int)"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"getSolutionCost()"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TSP","l":"getSolutionCost()"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"getStartTime()"},{"p":"com.pld.agile.model.entity","c":"Round","l":"getTourAttribution()"},{"p":"com.pld.agile.controller","c":"Controller","l":"getTours()"},{"p":"com.pld.agile.model","c":"Solver","l":"getVertices()"},{"p":"com.pld.agile.model.algorithm.tsp","c":"SeqIter","l":"hasNext()"},{"p":"com.pld.agile.model.entity","c":"Courier","l":"id"},{"p":"com.pld.agile.model.entity","c":"Intersection","l":"id"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"indexes"},{"p":"com.pld.agile.model","c":"Solver","l":"init()"},{"p":"com.pld.agile.model.entity","c":"Round","l":"init(Integer, Plan)","u":"init(java.lang.Integer,com.pld.agile.model.graph.Plan)"},{"p":"com.pld.agile.model.entity","c":"Intersection","l":"initialisation(String, double, double)","u":"initialisation(java.lang.String,double,double)"},{"p":"com.pld.agile.model.entity","c":"Section","l":"initialisation(String, String, String, double)","u":"initialisation(java.lang.String,java.lang.String,java.lang.String,double)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"initializeCostsMatrix()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"initializeDistances(int, int)","u":"initializeDistances(int,int)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"initializePreviousNodes(int)"},{"p":"com.pld.agile.model.entity","c":"Intersection","l":"Intersection()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"intersectionMap"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"intersections"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"IntersectionsTour"},{"p":"com.pld.agile.model.graph","c":"CompleteGraph","l":"isArc(int, int)","u":"isArc(int,int)"},{"p":"com.pld.agile.model.graph","c":"Graph","l":"isArc(int, int)","u":"isArc(int,int)"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"iterator(Integer, Collection<Integer>, Graph)","u":"iterator(java.lang.Integer,java.util.Collection,com.pld.agile.model.graph.Graph)"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TSP1","l":"iterator(Integer, Collection<Integer>, Graph)","u":"iterator(java.lang.Integer,java.util.Collection,com.pld.agile.model.graph.Graph)"},{"p":"com.pld.agile.model.entity","c":"Intersection","l":"latitude"},{"p":"com.pld.agile.model.entity","c":"Section","l":"length"},{"p":"com.pld.agile.controller","c":"Controller","l":"loadMap(MultipartFile)","u":"loadMap(org.springframework.web.multipart.MultipartFile)"},{"p":"com.pld.agile.model.entity","c":"Round","l":"loadRequests(String)","u":"loadRequests(java.lang.String)"},{"p":"com.pld.agile.model.entity","c":"Intersection","l":"longitude"},{"p":"com.pld.agile","c":"Application","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.pld.agile.model.algorithm.bnb","c":"runBnB","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"makeCostsMatrix()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"makeIntersectionsTour()"},{"p":"com.pld.agile.controller","c":"Controller","l":"map"},{"p":"com.pld.agile.model.entity","c":"Section","l":"name"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"nbCalls"},{"p":"com.pld.agile.model.algorithm.tsp","c":"SeqIter","l":"nbCandidates"},{"p":"com.pld.agile.model.graph","c":"CompleteGraph","l":"nbVertices"},{"p":"com.pld.agile.model.algorithm.tsp","c":"SeqIter","l":"next()"},{"p":"com.pld.agile.controller","c":"Controller","l":"numberOfCouriers"},{"p":"com.pld.agile.model.entity","c":"Section","l":"originId"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"permut(int[], int, int[], int, double)","u":"permut(int[],int,int[],int,double)"},{"p":"com.pld.agile.model.entity","c":"Round","l":"plan"},{"p":"com.pld.agile.model","c":"Solver","l":"plan"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"Plan()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model","c":"Solver","l":"pointsToBeServed()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"preprocessData()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"readXml(String)","u":"readXml(java.lang.String)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"readXmlbyFile(MultipartFile)","u":"readXmlbyFile(org.springframework.web.multipart.MultipartFile)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"reconstructPath(int, int, int[])","u":"reconstructPath(int,int,int[])"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"reIndexIntersections()"},{"p":"com.pld.agile.model.algorithm.tsp","c":"SeqIter","l":"remove()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"resetMap()"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"restoreTables(int[], int, int, int)","u":"restoreTables(int[],int,int,int)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"reverseIndexation()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"reverseIndexes"},{"p":"com.pld.agile.model.entity","c":"Round","l":"Round()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"route"},{"p":"com.pld.agile.model.algorithm.bnb","c":"runBnB","l":"runBnB()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"searchSolution(int, Graph)","u":"searchSolution(int,com.pld.agile.model.graph.Graph)"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TSP","l":"searchSolution(int, Graph)","u":"searchSolution(int,com.pld.agile.model.graph.Graph)"},{"p":"com.pld.agile.model.entity","c":"Section","l":"Section()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"sections"},{"p":"com.pld.agile.model.algorithm.tsp","c":"SeqIter","l":"SeqIter(Collection<Integer>, int, Graph)","u":"%3Cinit%3E(java.util.Collection,int,com.pld.agile.model.graph.Graph)"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"setArrivalTimes(Map<Intersection, LocalTime>)","u":"setArrivalTimes(java.util.Map)"},{"p":"com.pld.agile.model","c":"Solver","l":"setCompleteMatrix(ArrayList<ArrayList<Double>>)","u":"setCompleteMatrix(java.util.ArrayList)"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"setCostsMatrix(ArrayList<ArrayList<Double>>)","u":"setCostsMatrix(java.util.ArrayList)"},{"p":"com.pld.agile.model.entity","c":"DeliveryRequest","l":"setCourier(Courier)","u":"setCourier(com.pld.agile.model.entity.Courier)"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"setCourier(Courier)","u":"setCourier(com.pld.agile.model.entity.Courier)"},{"p":"com.pld.agile.model.entity","c":"DeliveryRequest","l":"setDeliveryAdress(Intersection)","u":"setDeliveryAdress(com.pld.agile.model.entity.Intersection)"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"setDeliveryRequests(List<DeliveryRequest>)","u":"setDeliveryRequests(java.util.List)"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"setEndTime(LocalTime)","u":"setEndTime(java.time.LocalTime)"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"setNbCalls(long)"},{"p":"com.pld.agile.model","c":"Solver","l":"setPlan(Plan)","u":"setPlan(com.pld.agile.model.graph.Plan)"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"setRoute(List<Section>)","u":"setRoute(java.util.List)"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"setStartTime(LocalTime)","u":"setStartTime(java.time.LocalTime)"},{"p":"com.pld.agile.model","c":"Solver","l":"setVertices(List<Integer>)","u":"setVertices(java.util.List)"},{"p":"com.pld.agile.model","c":"Solver","l":"solve()"},{"p":"com.pld.agile.model.strategy","c":"BnBStrategy","l":"solve(ArrayList<ArrayList<Double>>)","u":"solve(java.util.ArrayList)"},{"p":"com.pld.agile.model.strategy","c":"SolvingStrategy","l":"solve(ArrayList<ArrayList<Double>>)","u":"solve(java.util.ArrayList)"},{"p":"com.pld.agile.model.strategy","c":"TspStrategy","l":"solve(ArrayList<ArrayList<Double>>)","u":"solve(java.util.ArrayList)"},{"p":"com.pld.agile.model","c":"Solver","l":"Solver(Plan, List<Integer>, SolvingStrategy)","u":"%3Cinit%3E(com.pld.agile.model.graph.Plan,java.util.List,com.pld.agile.model.strategy.SolvingStrategy)"},{"p":"com.pld.agile.model","c":"Solver","l":"solvingStrategy"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"startTime"},{"p":"com.pld.agile.model.entity","c":"DeliveryTour","l":"startTime"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"TemplateTSP()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TemplateTSP","l":"timeLimit"},{"p":"com.pld.agile.model.entity","c":"Intersection","l":"toString()"},{"p":"com.pld.agile.model.entity","c":"Section","l":"toString()"},{"p":"com.pld.agile.model.graph","c":"CompleteGraph","l":"toString()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"toString()"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"tour"},{"p":"com.pld.agile.model.entity","c":"Round","l":"tourAttribution"},{"p":"com.pld.agile.model.strategy","c":"TspStrategy","l":"tsp"},{"p":"com.pld.agile.model.algorithm.tsp","c":"TSP1","l":"TSP1()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.model.strategy","c":"TspStrategy","l":"TspStrategy()","u":"%3Cinit%3E()"},{"p":"com.pld.agile.controller","c":"Controller","l":"updateCouriers(Map<String, Integer>)","u":"updateCouriers(java.util.Map)"},{"p":"com.pld.agile.model.graph","c":"Plan","l":"updateNeighborDistances(int, int, double[], boolean[], int[], PriorityQueue<Integer>, ArrayList<ArrayList<Double>>)","u":"updateNeighborDistances(int,int,double[],boolean[],int[],java.util.PriorityQueue,java.util.ArrayList)"},{"p":"com.pld.agile.model.algorithm.bnb","c":"BranchAndBound","l":"updateTables(int[], int, int[], int, int, int)","u":"updateTables(int[],int,int[],int,int,int)"},{"p":"com.pld.agile.controller","c":"Controller","l":"validateDeliveryRequest(Integer)","u":"validateDeliveryRequest(java.lang.Integer)"},{"p":"com.pld.agile.model","c":"Solver","l":"vertices"}];updateSearchResults();